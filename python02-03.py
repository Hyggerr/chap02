# 자바에서 배열 선언
# int[] array = new int[5];
# string[] strArray = {"배열1", "배열2", "배열3"}

# 파이썬에서 리스트 선언
# 파이썬에서 리스트는 자바에서 배열과 같은 기능을 함
# 자바에서는 배열에 자료형을 입력하기 때문에 같은 자료형의 데이터만 입력할 수 있으나 
# 파이썬에서는 자료형을 입력하지 않기 때문에 어떠한 자료형도 하나의 리스트에 입력이 가능함

print("리스트 사용하기")
a = []
b = [1, 2, 3]
c = ['Life', 'is', 'too', 'short']
d = [1, 2, 'Life', 'is']
e = [1, 2, ['Life', 'is']]

print("빈 리스트 : {0}".format(a))
print("숫자형 리스트 : {0}".format(b))
print("문자열형 리스트 : {0}".format(c))
print("숫자와 문자열 혼합형 리스트 : {0}".format(d))
print("숫자와 리스트 혼합형 리스트 : {0}".format(e))

# 리스트의 인덱싱과 슬라이싱
# 자바의 배열과 같이 인덱싱이 가능함
# index 번호는 0번부터 시작 (list[index])
# 리스트의 사용방법은 자바의 배열 사용방법과 기본적으로 같음
# 값 출력 : a[index]
# 값 입력 : a[index] = 입력할 값
# 리스트의 마지막 요소 출력 : a[-1]
# 리스트의 크기 구하기 : len(리스트명)

a = [1, 2, 3]
print("리스트 a의 index 1번 출력 : {0}".format(a[1]))

print("리스트를 사용하여 연산하기 : {0}".format(a[0] + a[2]))
print("리스트의 마지막 요소 출력 : {0}".format(a[-1]))
print("리스트의 마지막 요소 출력하기 : {0}".format(a[len(a)-1]))
print("리스트의 길이 출력하기 : {0}".format(len(a)))
print("=" * 50)

# 리스트에 안의 리스트 사용하기
# 리스트 안에 리스트를 입력하면 하나의 리스트 요소로 리스트를 가질 수 있음
# 리스트 안의 리스트의 요소에 접근하려면 자바의 2차원 배열을 사용하는 것처럼 접근가능
# 출력 : a[첫번째리스트 index][2번째리스트 index]
# 입력 : a[첫번째리스트 index][2번째리스트 index] = 값
a = [1, 2, 3, ['a', 'b', 'c']]
print(a[0])
print("리스트 a의 3번째 요소 출력 : {0}".format(a[2]))
print("리스트 a의 4번째 요소 출력 : {0}".format(a[3]))
print("리스트 a의 4번째 요소의 2번째 요소 출력 출력 : {0}".format(a[3][1]))
print(a[-1])
print(a[3])

print(a[-1][0])
print(a[-1][1])
print(a[-1][2])